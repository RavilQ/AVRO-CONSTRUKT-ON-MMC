
@model JobIndexVM
@{
    ViewData["Title"] = "Vəzifələr";
    int order =(Model.Jobs.PageNumber -1 )* Model.Jobs.PageSize;
}

@using AVRO_CONSTRUKTİON_MMC.Areas.Admin.ViewModels.JobVMs
@using X.PagedList.Mvc.Core; @*import this so we get our HTML Helper*@
@using X.PagedList; @*import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)*@
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common

<div class="p-3 w-100 overflow-scroll">

    <div class="d-flex col-12  my-2 justify-content-between align-items-center">
        <div>Yeni Vəzifə Yarat:</div>
        <a asp-action="create" asp-controller="job" class="btn btn-success">Yarat</a>
    </div>

    <table class="table table-dark table-hover">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Vəzifə</th>
                <th scope="col">Əməliyyatlar</th>

            </tr>
        </thead>
        <tbody>

            @foreach (Job job in Model.Jobs)
            {
                order++;
                <tr>
                    <th scope="row">@order</th>
                    <td>@job.Name</td>


                    <td class="d-flex nowrap">
                        <a asp-action="edit" asp-controller="job" asp-route-id="@job.Id" class="btn btn-info">Edit</a>
                        <a asp-action="Delete" asp-controller="job" asp-route-id="@job.Id" class="btn btn-danger btn-delete">Delete</a>

                    </td>

                </tr>

            }
            

        </tbody>
    </table>

    <div>
        @Html.PagedListPager(Model.Jobs, CurrentPage => Url.Action("Index", new { CurrentPage , PageSize = Model.Jobs.PageSize} ),
        new PagedListRenderOptions{
            MaximumPageNumbersToDisplay = 5,
            ClassToApplyToLastListItemInPager = "d-none",
        })
    </div>


</div>


@section Scripts{
    @await Html.PartialAsync("_swalDeleteScript")
}

